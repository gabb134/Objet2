package application;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.geometry.Orientation;
import javafx.geometry.Pos;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.control.SeparatorMenuItem;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyCodeCombination;
import javafx.scene.input.KeyCombination;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.Border;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.BorderStroke;
import javafx.scene.layout.BorderStrokeStyle;
import javafx.scene.layout.BorderWidths;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.scene.text.TextAlignment;

public class InterfaceMotCroises extends Application {
	// Variables de classe
	BorderPane root;
	BorderPane bpaneCentre;
	// BorderPane bpaneDroite;
	GridPane gpane;
	MenuItem itemReglesDuJeu;
	MenuItem itemThemeSport;
	MenuItem itemThemeBible;
	MenuItem itemThemeTech;
	MenuItem itemQuitter;
	Text txtNomTheme;
	VBox vboxDroite;

	@Override
	public void start(Stage primaryStage) {
		try {
			root = new BorderPane();
			Scene scene = new Scene(root, 1000, 800);
			// CONSTRUCTION DE L'INTERFACE
			bpaneCentre = new BorderPane(); // Pour la partie du milieu
			// La partie a droite du root(vbox)
			// Pour le vbox a droite
			vboxDroite = new VBox(); // Pour la partie de droite		
			//Text textBinevenue = new Text("Bienvenue! Pour jouer, cliquez sur un \nnuméro dans la grille, écrivez le mot et\ncliquer sur OK ou apuyyez sur la \ntouche Entrée (Entrer) pour continuer");
			Text textBinevenue = new Text("Bienvenue! Pour jouer, cliquez sur un numéro dans la grille, écrivez le mot et cliquer sur OK ou apuyyez sur la touche Entrée (Entrer) pour continuer");
			Font font = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 15);
			
			HBox hboxTextBienvenue = new HBox(5);			
			hboxTextBienvenue.setPrefWidth(150);			
			hboxTextBienvenue.setMaxSize(60, 30);
			textBinevenue.setFont(font);
			//textBinevenue.setTextAlignment(TextAlignment.CENTER);
			//textBinevenue.setWrappingWidth(350);
			vboxDroite.setMargin(hboxTextBienvenue, new Insets(60));
			
			txtNomTheme = new Text("Mots croisés par Gabriel Marrero");
			Font font3 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 30);
			txtNomTheme.setFont(font3);
			bpaneCentre.setAlignment(txtNomTheme, Pos.CENTER);
			bpaneCentre.setTop(txtNomTheme);
			
		
		
			// Pour le gridpane de a droite(Dans le vbox)
			gpane = new GridPane(); // Pour la partie de droite en bas
			gpane.setPadding(new Insets(5));
			//gpane.setGridLinesVisible(true); 
			gpane.setAlignment(Pos.CENTER);
			gpane.setVgap(7);
			gpane.setHgap(7);
			BorderStroke bordureBleu = new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, CornerRadii.EMPTY,new BorderWidths(5), new Insets(0));
			Border bordure = new Border(bordureBleu);
			gpane.setBorder(bordure);
			vboxDroite.setMargin(gpane, new Insets(60));
			//bpaneCentre.setMargin(gpane, new Insets(125));
			gpane.setMaxSize(250, 70);
			vboxDroite.setMaxWidth(Double.MAX_VALUE);
			//gpane.setMargin(child, value);
			vboxDroite.setAlignment(Pos.CENTER_RIGHT);
			 

			HBox hboxIcone = new HBox();
			Button btnLettres = new Button("LETTRES");
			Button btnSolution = new Button("SOLUTION");
			Button btnOk = new Button("OK");
			Button btnAide = new Button("AIDE");
			TextField txtReponse = new TextField();
			Text txtVotreScore = new Text("VOTRE SCORE");
			Text txtMaximum = new Text("MAXIMUM");
			VBox vboxMax = new VBox(7);
			VBox vboxVotreScore = new VBox(7);	
			HBox hboxMax = new HBox(5);
			HBox hboxVotreScore = new HBox(5);
			TextField txtFieldvotreSocre = new TextField("0");
			TextField txtFieldmaximum = new TextField("125");	
			
			BorderStroke bordureNoir = new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(5),new BorderWidths(2), new Insets(0));
			Border borduregGpane = new Border(bordureNoir);		
			Background couleurFill = new Background(new BackgroundFill(Color.YELLOW, new CornerRadii(5), new Insets(0)));
			Font font1 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 15);
			Font font2 = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 10);
			
			
			btnLettres.setFont(font);
			btnLettres.setMaxSize(150, 20);
			btnSolution.setFont(font);
			btnSolution.setMaxSize(150, 20);
			btnOk.setFont(font);
			btnAide.setFont(font);
			txtVotreScore.setFont(font2);
			txtMaximum.setFont(font2);
			

			txtReponse.setBorder(borduregGpane);
			//txtReponse.setMaxHeight(500);
			//txtReponse.setPrefSize(10, 2);
			txtReponse.setMaxSize(220, -10);
			btnLettres.setBorder(borduregGpane);
			btnSolution.setBorder(borduregGpane);
			btnOk.setBorder(borduregGpane);
			btnAide.setBorder(borduregGpane);

			
			
		
			vboxVotreScore.setBackground(couleurFill);
			vboxVotreScore.setPadding(new Insets(5));
			vboxVotreScore.setPrefWidth(10);
			vboxVotreScore.setSpacing(2);	
			hboxVotreScore.getChildren().add(txtVotreScore);
			hboxVotreScore.setAlignment(Pos.CENTER);
			vboxVotreScore.getChildren().addAll(hboxVotreScore,txtFieldvotreSocre);
			txtVotreScore.setTextAlignment(TextAlignment.CENTER);
			txtFieldvotreSocre.setFont(font1);
			txtFieldvotreSocre.setAlignment(Pos.CENTER);
			
			vboxMax.setBackground(couleurFill);
			vboxMax.setPadding(new Insets(5));
			vboxMax.setPrefWidth(10);
			vboxMax.setSpacing(2);
			hboxMax.getChildren().add(txtMaximum);
			hboxMax.setAlignment(Pos.CENTER);
			txtMaximum.setTextAlignment(TextAlignment.CENTER);
			vboxMax.getChildren().addAll(hboxMax,txtFieldmaximum);
				
			txtFieldmaximum.setFont(font1);
			txtFieldmaximum.setAlignment(Pos.CENTER);
			//txtReponse.setPrefHeight(10);
			
			
			gpane.add(txtReponse, 0, 0, 2,1);
			gpane.add(btnLettres, 0, 1);
			gpane.add(btnSolution, 1, 1);		
			gpane.add(btnOk,0,2,2,1);
			GridPane.setHalignment(btnOk, HPos.CENTER);
			gpane.add(vboxVotreScore,0, 3);
			gpane.add(vboxMax,1, 3);
			GridPane.setHalignment(vboxVotreScore, HPos.CENTER);
			GridPane.setHalignment(vboxMax, HPos.CENTER);
			gpane.add(btnAide,0,4,2,1);
			GridPane.setHalignment(btnAide, HPos.CENTER);

			root.setCenter(bpaneCentre);
			root.setRight(vboxDroite);
			vboxDroite.setSpacing(200);
			hboxTextBienvenue.getChildren().add(textBinevenue);
			vboxDroite.getChildren().addAll(hboxTextBienvenue, gpane);
			
			
			//POUR LA GRILLE LES CASES ET LES NUMEROS
			/*Font fontCases = Font.font("Verdana", FontWeight.NORMAL, FontPosture.REGULAR, 10);
			BorderStroke bordureNoirCases = new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(5),new BorderWidths(2), new Insets(0));
			Border bordureCases = new Border(bordureNoirCases);		

			VBox vboxCentre = new VBox();
			vboxCentre.setSpacing(2);
			bpaneCentre.setCenter(vboxCentre);
			HBox hboxCases = new HBox(1);
			
			
			TextField txtCases1 = new TextField();
			TextField txtCases2 = new TextField();
			TextField txtCases3 = new TextField();
			TextField txtCases4 = new TextField();
			TextField txtCases5 = new TextField();
			TextField txtCases6 = new TextField();
			TextField txtCases7 = new TextField();
			TextField txtCases8 = new TextField();
			
			TextField txtCases9 = new TextField();
			TextField txtCases10 = new TextField();
			TextField txtCases11 = new TextField();
			TextField txtCases12 = new TextField();
			TextField txtCases13 = new TextField();
			TextField txtCases14 = new TextField();
			TextField txtCases15 = new TextField();
		
			txtCases1.setMaxSize(30,30);
			txtCases1.setFont(fontCases);
			txtCases1.setBorder(bordureCases);
			
			txtCases2.setMaxSize(30,30);
			txtCases2.setFont(fontCases);
			txtCases2.setBorder(bordureCases);
			
			txtCases3.setMaxSize(30,30);
			txtCases3.setFont(fontCases);
			txtCases3.setBorder(bordureCases);
			
			txtCases4.setMaxSize(30,30);
			txtCases4.setFont(fontCases);
			txtCases4.setBorder(bordureCases);
			
			
			txtCases5.setMaxSize(30,30);
			txtCases5.setFont(fontCases);
			txtCases5.setBorder(bordureCases);
			
			txtCases6.setMaxSize(30,30);
			txtCases6.setFont(fontCases);
			txtCases6.setBorder(bordureCases);
			
			
			txtCases7.setMaxSize(30,30);
			txtCases7.setFont(fontCases);
			txtCases7.setBorder(bordureCases);
			
			txtCases8.setMaxSize(30,30);
			txtCases8.setFont(fontCases);
			txtCases8.setBorder(bordureCases);
			
		
			
			
		
			
			hboxCases.getChildren().addAll(txtCases1,txtCases2,txtCases3,txtCases4,txtCases5,txtCases6,txtCases7,txtCases8);
			vboxCentre.getChildren().addAll(hboxCases);
			
			bpaneCentre.setMargin(vboxCentre, new Insets(50));*/
			
			
			// BARRE DE MENU
			Menu menuThemes = new Menu("_Thèmes");
			Menu menuAide = new Menu("Aide");
			menuThemes.setMnemonicParsing(true);

			itemThemeSport = new MenuItem("Le sport");
			itemThemeBible = new MenuItem("La Bible");
			itemThemeTech = new MenuItem("La technologie");
			itemReglesDuJeu = new MenuItem("Rèlges du jeu");
			itemQuitter = new MenuItem("Quitter");

			itemReglesDuJeu.setAccelerator(new KeyCodeCombination(KeyCode.R,KeyCombination.CONTROL_DOWN));
			itemQuitter.setAccelerator(new KeyCodeCombination(KeyCode.Q,KeyCombination.CONTROL_DOWN));

			
			MenuBar barreDeMenu = new MenuBar();
			root.setTop(barreDeMenu);

			menuThemes.getItems().addAll(itemThemeBible, itemThemeTech, itemThemeSport);
			menuAide.getItems().addAll(itemReglesDuJeu,new SeparatorMenuItem(),itemQuitter );

			barreDeMenu.getMenus().addAll(menuThemes, menuAide);

			// LA GESTION DES EVENEMENTS DU MENU
			itemReglesDuJeu.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent arg0) {
					// TODO Auto-generated method stub
					Alert alertInfo = new Alert(AlertType.INFORMATION);
					String text = "Règles du jeu";
					alertInfo.setTitle("Règles du jeu");
					alertInfo.setHeaderText(text.toString().toUpperCase());
					alertInfo.setContentText(" o Quand vous cliquez sur un numéro, vous obtenez lindice (texte descriptif) du mot recherché.  Vous pouvez avoir la solution, pour le mot en cours, en cliquant sur le bouton correspondant.\n\n o Le bouton Lettres vous fournit, en désordre, toutes les lettres du mot recherché. Pour répondre, vous écrivez le mot dans la grille correspondante et vous validez à laide du bouton OK ou la touche Entrée du clavier.\n\n o Dans le cas dune mauvaise réponse, la solution vous est donnée. Le bouton Ok est sans effet si la grille du mot courant nest pas complète. Vous pouvez supprimer les caractères entrés à laide de la touche retour arrière (<-) de votre clavier.\n\n o Noter que les caractères des mots validés ne peuvent être effacés. Si vous essayez un autre mot avant davoir validé le mot courant, ce dernier est remis à son état initial (toutes les lettres entrées sont effacées) et le nouveau mot devient le mot courant.  \n\no Si vous demandez les lettres et décidez de répondre plus tard, le programme doit se souvenir que vous avez déjà vu les lettres pour vous attribuer, le cas échéant, les points en conséquence. Notez que le programme vous redonnera la même séquence de lettres lors des prochains essais.");
					alertInfo.showAndWait();

				}
			});
			itemQuitter.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent arg0) {
					// TODO Auto-generated method stub
					Platform.exit();

				}
			});


			itemThemeBible.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent arg0) {
					// TODO Auto-generated method stub
					txtNomTheme = new Text("La Bible");
					Font font = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 30);
					txtNomTheme.setFont(font);
					bpaneCentre.setAlignment(txtNomTheme, Pos.CENTER);
					bpaneCentre.setTop(txtNomTheme);
				}
			});
			itemThemeTech.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent arg0) {
					// TODO Auto-generated method stub
					txtNomTheme = new Text("La technologie");
					Font font = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 30);
					txtNomTheme.setFont(font);
					bpaneCentre.setAlignment(txtNomTheme, Pos.CENTER);
					bpaneCentre.setTop(txtNomTheme);
				}
			});
			itemThemeSport.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent arg0) {
					// TODO Auto-generated method stub

					txtNomTheme = new Text("Le sport");
					Font font = Font.font("Verdana", FontWeight.BOLD, FontPosture.REGULAR, 30);
					txtNomTheme.setFont(font);
					bpaneCentre.setAlignment(txtNomTheme, Pos.CENTER);
					bpaneCentre.setTop(txtNomTheme);

				}
			});

			primaryStage.setScene(scene);
			primaryStage.setResizable(false);
			primaryStage.setTitle("Mots croisés");
			primaryStage.show();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		launch(args);
	}
}
